
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(patchwork)
> library(loo)
This is loo version 2.8.0
- Online documentation and vignettes at mc-stan.org/loo
- As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session. 
> library(bayesplot)
This is bayesplot version 1.11.1
- Online documentation and vignettes at mc-stan.org/bayesplot
- bayesplot theme set to bayesplot::theme_default()
   * Does _not_ affect other ggplot2 plots
   * See ?bayesplot_theme_set for details on theme setting
> library(cmdstanr)
This is cmdstanr version 0.8.1
- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr
- CmdStan path: /u/cdslab/scocomello/.cmdstan/cmdstan-2.34.1
- CmdStan version: 2.34.1

A newer version of CmdStan is available. See ?install_cmdstan() to install it.
To disable this check set option or environment variable cmdstanr_no_ver_check=TRUE.
> library(factoextra)
Loading required package: ggplot2
Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(stringr) #for plotting add in the right script
> library(fossil) #RI and ARI computation
Loading required package: sp
Loading required package: maps
Loading required package: shapefiles
Loading required package: foreign

Attaching package: ‘shapefiles’

The following objects are masked from ‘package:foreign’:

    read.dbf, write.dbf

> library(gridExtra)

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> library(ppclust)
> 
> set.seed(123)
> 
> 
> 
> #setwd("C:/Users/sarac/CDS_git/Copy-Number-Timing/CopyNumber/")
> #orfeo
> 
> sim_list = c(1,6,7,8,9,10,11,12,13,14,15)
> number_clocks_list = c(3,2,2,2,3,3,3,3,4,4,4)
> number_events_list = c(10,10,20,30,6,10,20,30,10,20,30)
> epsilon_list = c(0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.15,0.15,0.15)
> for (i in (1:length(sim_list))) {
+ 
+ 
+ 
+ 
+     # setwd("D:/scratch/Copy_Number_Timing/CopyNumber")
+     setwd("/orfeo/cephfs/scratch/cdslab/scocomello/Copy_Number_Timing/CopyNumber")
+ 
+     original_dir <- getwd()
+ 
+     source("./CNTiming/R/simulate_functions.R")
+     source("./CNTiming/R/fitting_functions.R")
+     source("./CNTiming/R/plotting_functions.R")
+ 
+ 
+     self_name = as.character(sim_list[i])
+     new_dir = paste0("../",self_name) #relative path of the new created directory where to save the simulation results
+     dir.create(new_dir)
+ 
+     number_events = number_events_list[i]
+     number_clocks = number_clocks_list[i]
+ 
+     INIT = FALSE
+     epsilon = epsilon_list[i]
+     n_simulations = 20
+     purity = 0.99
+ 
+     vector_karyo <- c("2:0", "2:1", "2:2")
+     weights_karyo <- c(0.33, 0.33, 0.33)
+ 
+ 
+     # get simulation parametes
+     coverage = 100 # average number of reads that align to a reference base
+     mu = 1e-4 # mutation rate
+     w = 1e-2 # cell division rate
+     l = 1e7 # length of the segment
+     time_interval = 20
+ 
+ 
+     options(bitmapType='cairo')
+ 
+ 
+ 
+ 
+     for(i in 1:n_simulations){
+       # Create a unique directory for each iteration
+       iter_dir <- paste0("/simulation_iteration_", i)
+       iter_dir <- paste0(new_dir,iter_dir)
+       dir.create(iter_dir)
+       setwd(iter_dir)
+       dir.create(paste0("./plots"), showWarnings = TRUE)
+       dir.create(paste0("./results"), showWarnings = FALSE)
+       
+       
+ 
+       vector_tau = rep(0, number_clocks)
+       
+       for (j in 1:number_clocks){
+         vector_tau[j] = runif(1, 0)
+         if (j != 1){
+           while (!all ( abs(vector_tau[1:j-1] - vector_tau[j]) > epsilon  )   ){
+             vector_tau[j] = runif(1, 0)
+           }
+         }
+       }
+       weights_tau <- rep(1/number_clocks, number_clocks)
+       
+       data <- get_taus_karyo(number_events, vector_tau, vector_karyo, weights_tau, weights_karyo)
+       simulation_data_all_segments = get_simulation(data$taus, data$karyo, purity, coverage = 100) # the other parameters have default value assigned if none is specified
+       simulation_data_all_segments <- simulation_data_all_segments[order(simulation_data_all_segments$segment_id), ]
+ 
+ 
+       saveRDS(simulation_data_all_segments, "./results/all_sim_input_prepare_input_data.rds")
+ 
+ 
+ 
+       
+       Subtitle <- vector("list", (length(unique(simulation_data_all_segments$segment_id))+1))
+       Subtitle[[1]]  <- paste0("Number of mutations per segment: ")
+       num_mutations_all_segments <- c()
+ 
+         for (i in seq_along(unique(simulation_data_all_segments$segment_id))) {
+         segment <- unique(simulation_data_all_segments$segment_id)[i]
+         num_mutations <- nrow(simulation_data_all_segments %>% filter(segment_id == segment))
+         num_mutations_all_segments <- c(num_mutations_all_segments, num_mutations)
+         Subtitle[[i+1]] <- paste0(segment, "=", num_mutations," ")
+       }
+       
+       Subtitle <- paste(Subtitle, collapse = "   ")
+       cat(Subtitle)
+ 
+       mean_mut <- mean(num_mutations_all_segments)
+       max_mut <- max(num_mutations_all_segments)
+       min_mut <- min(num_mutations_all_segments)
+ 
+       Subtitle_short <- paste0("Mutations per segment: average =", mean_mut, ",  min = ", min_mut, ", max = ", max_mut )
+ 
+ 
+       #add statistics on number of mutations from the simulation
+       
+       simulation_params <- list(
+         vector_tau = vector_tau,
+         vector_karyo = vector_karyo,
+         weights_tau = weights_tau,
+         weights_karyo = weights_karyo,
+         taus = data$taus,
+         karyo = data$karyo,
+         purity = purity,
+         number_events = number_events, # = nrow(vector-tau) / nrow(vector_karyo)
+         number_clocks = number_clocks, # = unique(vector_tau)
+         epsilon = epsilon
+       )
+ 
+ 
+ 
+       simulation_data_plot = simulation_data_all_segments %>% mutate (tau = round(tau, 2))
+       plot_data <- simulation_data_plot %>% 
+         ggplot(mapping = aes(x = NV / DP, fill = segment_name)) +
+         geom_histogram(alpha = .5, position = "identity") +
+         labs(
+           title = "Distribution on the VAF for each segment in the simulated data",
+           subtitle = paste0(Subtitle_short)
+         )+
+         facet_wrap(vars(karyotype, tau, segment_name), scales = "free_x", strip.position = "bottom") +
+         theme_minimal() +
+         theme(
+         panel.background = element_rect(fill = "white", color = NA),  # White panel background
+         plot.background = element_rect(fill = "white", color = NA),   # White plot background
+         strip.background = element_rect(fill = "white", color = NA),  # White strip background
+         strip.placement = "outside",   # Place facet labels outside
+         axis.text.x = element_text(angle = 360, hjust = 1, color = "black", size = 8),  # Rotate and adjust x-axis text
+         axis.ticks.x = element_line(color = "black"),  # Black x-axis ticks
+         panel.spacing = unit(1, "lines"),  # Adjust space between facets
+         strip.text.x = element_text(size = 10, color = "black"),  # Adjust and color strip text
+         axis.line = element_line(color = "black"),  # Black axis lines
+         axis.title.x = element_text(color = "black"),  # Black x-axis title
+         axis.title.y = element_text(color = "black")   # Black y-axis title
+       )+
+        xlim(0, 1)
+ 
+ 
+       #save plot of the simulated data in which we can see each single segment VAF distribution
+       ggsave("./plots/simulation_data.png", plot = plot_data, width = 12 + simulation_params$number_events, height = 10 + simulation_params$number_events + (simulation_params$number_events/1.3), limitsize = FALSE,   device = png) 
+       #simulation_params can be substituted in relation with simulation_data variables
+       
+       
+       #in fit model selection best K the plots for each K inference is directly saved 
+       results <- fit_model_selection_best_K(simulation_data_all_segments, data$karyo, purity, INIT = INIT, simulation_params = simulation_params)
+       saveRDS(results, paste0("./results/results_simulation",i,".rds"))
+       
+ 
+       
+       
+       
+       model_selection_plot = plotting_model_selection(results)
+       model_selection_plot
+       ggsave("./plots/model_selection_plot.png", plot = model_selection_plot, width = 12, height = 10,  device = png)
+       
+       model_selection <- results$model_selection_tibble
+       saveRDS(model_selection, "./results/model_selection.rds")
+       
+ 
+       
+       setwd(original_dir)
+       
+     }
+ 
+ }
Loading required package: StanHeaders

rstan version 2.32.6 (Stan version 2.32.2)

For execution on a local, multicore CPU with excess RAM we recommend calling
options(mc.cores = parallel::detectCores()).
To avoid recompilation of unchanged Stan programs, we recommend calling
rstan_options(auto_write = TRUE)
For within-chain threading using `reduce_sum()` or `map_rect()` Stan functions,
change `threads_per_chain` option:
rstan_options(threads_per_chain = 1)


Attaching package: ‘tidyr’

The following object is masked from ‘package:rstan’:

    extract


Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count

Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004741 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.41 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -15015.874             1.000            1.000 
   200       -15015.969             0.500            1.000 
   300       -15015.827             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  16.6 seconds.
Saving 7 x 7 in image
ELBO for this run: -15015.2883
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004209 seconds 
1000 transitions using 10 leapfrog steps per transition would take 42.09 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -15015.874             1.000            1.000 
   200       -15015.969             0.500            1.000 
   300       -15015.827             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  16.6 seconds.
Saving 7 x 7 in image
ELBO for this run: -15015.2883
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004199 seconds 
1000 transitions using 10 leapfrog steps per transition would take 41.99 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -15015.874             1.000            1.000 
   200       -15015.969             0.500            1.000 
   300       -15015.827             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  16.6 seconds.
Saving 7 x 7 in image
ELBO for this run: -15015.2883
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004251 seconds 
1000 transitions using 10 leapfrog steps per transition would take 42.51 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -15015.874             1.000            1.000 
   200       -15015.969             0.500            1.000 
   300       -15015.827             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  16.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -15015.2883
Best ELBO after 4 attempts: -15015.2883
 loglik = likelihood value from generated quantities-3.203756 1000 4686log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-15012.8[1] "dim of log_lik_matrix4686" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=528    segment 3=602    segment 4=365    segment 5=354    segment 6=372    segment 7=687    segment 8=387    segment 9=472    segment 10=365 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007836 seconds 
1000 transitions using 10 leapfrog steps per transition would take 78.36 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007793 seconds 
1000 transitions using 10 leapfrog steps per transition would take 77.93 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  24.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007749 seconds 
1000 transitions using 10 leapfrog steps per transition would take 77.49 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007803 seconds 
1000 transitions using 10 leapfrog steps per transition would take 78.03 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Best ELBO after 4 attempts: -14558.1085
 loglik = likelihood value from generated quantities-3.098809 1000 4686log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-14521.02[1] "dim of log_lik_matrix4686" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=528    segment 3=602    segment 4=365    segment 5=354    segment 6=372    segment 7=687    segment 8=387    segment 9=472    segment 10=365 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.011064 seconds 
1000 transitions using 10 leapfrog steps per transition would take 110.64 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14565.816             1.000            1.000 
   200       -14564.297             0.500            1.000 
   300       -14561.300             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.7 seconds.
Saving 7 x 7 in image
ELBO for this run: -14593.6963
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.010893 seconds 
1000 transitions using 10 leapfrog steps per transition would take 108.93 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14565.816             1.000            1.000 
   200       -14564.297             0.500            1.000 
   300       -14561.300             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -14593.6963
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.011042 seconds 
1000 transitions using 10 leapfrog steps per transition would take 110.42 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14565.816             1.000            1.000 
   200       -14564.297             0.500            1.000 
   300       -14561.300             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -14593.6963
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.011127 seconds 
1000 transitions using 10 leapfrog steps per transition would take 111.27 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14565.816             1.000            1.000 
   200       -14564.297             0.500            1.000 
   300       -14561.300             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  34.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -14593.6963
Best ELBO after 4 attempts: -14593.6963
 loglik = likelihood value from generated quantities-3.099798 1000 4686log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-14525.65[1] "dim of log_lik_matrix4686" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=528    segment 3=602    segment 4=365    segment 5=354    segment 6=372    segment 7=687    segment 8=387    segment 9=472    segment 10=365 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.015007 seconds 
1000 transitions using 10 leapfrog steps per transition would take 150.07 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14579.614             1.000            1.000 
   200       -14580.251             0.500            1.000 
   300       -14575.885             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  42.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -14624.5035
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.015074 seconds 
1000 transitions using 10 leapfrog steps per transition would take 150.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14579.614             1.000            1.000 
   200       -14580.251             0.500            1.000 
   300       -14575.885             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  42.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -14624.5035
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.01473 seconds 
1000 transitions using 10 leapfrog steps per transition would take 147.3 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14579.614             1.000            1.000 
   200       -14580.251             0.500            1.000 
   300       -14575.885             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  43.7 seconds.
Saving 7 x 7 in image
ELBO for this run: -14624.5035
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.014886 seconds 
1000 transitions using 10 leapfrog steps per transition would take 148.86 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14579.614             1.000            1.000 
   200       -14580.251             0.500            1.000 
   300       -14575.885             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  42.8 seconds.
Saving 7 x 7 in image
ELBO for this run: -14624.5035
Best ELBO after 4 attempts: -14624.5035
 loglik = likelihood value from generated quantities-3.100502 1000 4686log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-14528.95[1] "dim of log_lik_matrix4686" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=528    segment 3=602    segment 4=365    segment 5=354    segment 6=372    segment 7=687    segment 8=387    segment 9=472    segment 10=365 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.4950000 0.9900000
 [5,] 0.4950000 0.9900000
 [6,] 0.4950000 0.9900000
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:1" "2:1" "2:0" "2:0" "2:0" "2:2" "2:0" "2:2" "2:0"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007946 seconds 
1000 transitions using 10 leapfrog steps per transition would take 79.46 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007732 seconds 
1000 transitions using 10 leapfrog steps per transition would take 77.32 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00772 seconds 
1000 transitions using 10 leapfrog steps per transition would take 77.2 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007888 seconds 
1000 transitions using 10 leapfrog steps per transition would take 78.88 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -14555.054             1.000            1.000 
   200       -14551.548             0.500            1.000 
   300       -14550.435             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -14558.1085
Best ELBO after 4 attempts: -14558.1085
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=528    segment 3=602    segment 4=365    segment 5=354    segment 6=372    segment 7=687    segment 8=387    segment 9=472    segment 10=365 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=579    2=545    3=624    4=384    5=367    6=385    7=713    8=400    9=490    10=373 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.003839 seconds 
1000 transitions using 10 leapfrog steps per transition would take 38.39 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13656.133             1.000            1.000 
   200       -13656.312             0.500            1.000 
   300       -13656.134             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  15.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -13655.4841
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.003819 seconds 
1000 transitions using 10 leapfrog steps per transition would take 38.19 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13656.133             1.000            1.000 
   200       -13656.312             0.500            1.000 
   300       -13656.134             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  15.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -13655.4841
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.003854 seconds 
1000 transitions using 10 leapfrog steps per transition would take 38.54 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13656.133             1.000            1.000 
   200       -13656.312             0.500            1.000 
   300       -13656.134             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -13655.4841
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.003882 seconds 
1000 transitions using 10 leapfrog steps per transition would take 38.82 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13656.133             1.000            1.000 
   200       -13656.312             0.500            1.000 
   300       -13656.134             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  15.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -13655.4841
Best ELBO after 4 attempts: -13655.4841
 loglik = likelihood value from generated quantities-3.262445 1000 4185log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13653.33[1] "dim of log_lik_matrix4185" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=561    segment 2=245    segment 3=335    segment 4=366    segment 5=487    segment 6=513    segment 7=313    segment 8=377    segment 9=474    segment 10=514 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007057 seconds 
1000 transitions using 10 leapfrog steps per transition would take 70.57 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007175 seconds 
1000 transitions using 10 leapfrog steps per transition would take 71.75 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.8 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007144 seconds 
1000 transitions using 10 leapfrog steps per transition would take 71.44 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007227 seconds 
1000 transitions using 10 leapfrog steps per transition would take 72.27 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Best ELBO after 4 attempts: -13438.9493
 loglik = likelihood value from generated quantities-3.203347 1000 4185log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13406.01[1] "dim of log_lik_matrix4185" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=561    segment 2=245    segment 3=335    segment 4=366    segment 5=487    segment 6=513    segment 7=313    segment 8=377    segment 9=474    segment 10=514 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.009946 seconds 
1000 transitions using 10 leapfrog steps per transition would take 99.46 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.574             1.000            1.000 
   200       -13440.142             0.500            1.000 
   300       -13439.419             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  29.8 seconds.
Saving 7 x 7 in image
ELBO for this run: -13471.2139
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.009844 seconds 
1000 transitions using 10 leapfrog steps per transition would take 98.44 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.574             1.000            1.000 
   200       -13440.142             0.500            1.000 
   300       -13439.419             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  30.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -13471.2139
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.009774 seconds 
1000 transitions using 10 leapfrog steps per transition would take 97.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.574             1.000            1.000 
   200       -13440.142             0.500            1.000 
   300       -13439.419             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  30.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -13471.2139
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.009826 seconds 
1000 transitions using 10 leapfrog steps per transition would take 98.26 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.574             1.000            1.000 
   200       -13440.142             0.500            1.000 
   300       -13439.419             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  30.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -13471.2139
Best ELBO after 4 attempts: -13471.2139
 loglik = likelihood value from generated quantities-3.203624 1000 4185log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13407.17[1] "dim of log_lik_matrix4185" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=561    segment 2=245    segment 3=335    segment 4=366    segment 5=487    segment 6=513    segment 7=313    segment 8=377    segment 9=474    segment 10=514 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013541 seconds 
1000 transitions using 10 leapfrog steps per transition would take 135.41 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13450.480             1.000            1.000 
   200       -13452.422             0.500            1.000 
   300       -13449.439             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  37.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -13509.1425
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013432 seconds 
1000 transitions using 10 leapfrog steps per transition would take 134.32 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13450.480             1.000            1.000 
   200       -13452.422             0.500            1.000 
   300       -13449.439             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  37.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -13509.1425
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013529 seconds 
1000 transitions using 10 leapfrog steps per transition would take 135.29 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13450.480             1.000            1.000 
   200       -13452.422             0.500            1.000 
   300       -13449.439             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  37.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -13509.1425
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013674 seconds 
1000 transitions using 10 leapfrog steps per transition would take 136.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13450.480             1.000            1.000 
   200       -13452.422             0.500            1.000 
   300       -13449.439             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  37.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -13509.1425
Best ELBO after 4 attempts: -13509.1425
 loglik = likelihood value from generated quantities-3.204595 1000 4185log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13411.23[1] "dim of log_lik_matrix4185" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=561    segment 2=245    segment 3=335    segment 4=366    segment 5=487    segment 6=513    segment 7=313    segment 8=377    segment 9=474    segment 10=514 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.4950000 0.9900000
 [5,] 0.2487437 0.4974874
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.3311037 0.6622074
[10,] 0.3311037 0.6622074
 [1] "2:1" "2:0" "2:0" "2:0" "2:2" "2:1" "2:0" "2:0" "2:1" "2:1"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007018 seconds 
1000 transitions using 10 leapfrog steps per transition would take 70.18 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.0071 seconds 
1000 transitions using 10 leapfrog steps per transition would take 71 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.007036 seconds 
1000 transitions using 10 leapfrog steps per transition would take 70.36 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00711 seconds 
1000 transitions using 10 leapfrog steps per transition would take 71.1 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13440.928             1.000            1.000 
   200       -13433.816             0.500            1.000 
   300       -13434.563             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  22.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -13438.9493
Best ELBO after 4 attempts: -13438.9493
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=561    segment 2=245    segment 3=335    segment 4=366    segment 5=487    segment 6=513    segment 7=313    segment 8=377    segment 9=474    segment 10=514 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=593    2=251    3=343    4=377    5=498    6=540    7=327    8=386    9=494    10=537 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004757 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.57 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004777 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.77 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004817 seconds 
1000 transitions using 10 leapfrog steps per transition would take 48.17 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004827 seconds 
1000 transitions using 10 leapfrog steps per transition would take 48.27 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Best ELBO after 4 attempts: -17511.9643
 loglik = likelihood value from generated quantities-3.27041 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17509.77[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008766 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.66 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008793 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.93 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008803 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.03 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008858 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.58 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Best ELBO after 4 attempts: -17182.2094
 loglik = likelihood value from generated quantities-3.203229 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17150.09[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.0135 seconds 
1000 transitions using 10 leapfrog steps per transition would take 135 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013215 seconds 
1000 transitions using 10 leapfrog steps per transition would take 132.15 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013136 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.36 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013249 seconds 
1000 transitions using 10 leapfrog steps per transition would take 132.49 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.7 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Best ELBO after 4 attempts: -17219.1696
 loglik = likelihood value from generated quantities-3.203748 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17152.87[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016567 seconds 
1000 transitions using 10 leapfrog steps per transition would take 165.67 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.7 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016843 seconds 
1000 transitions using 10 leapfrog steps per transition would take 168.43 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016558 seconds 
1000 transitions using 10 leapfrog steps per transition would take 165.58 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016838 seconds 
1000 transitions using 10 leapfrog steps per transition would take 168.38 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Best ELBO after 4 attempts: -17251.0352
 loglik = likelihood value from generated quantities-3.203165 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17149.74[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008847 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.47 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008859 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.59 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008742 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.42 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008815 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.15 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Best ELBO after 4 attempts: -17182.2094
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004776 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.76 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004956 seconds 
1000 transitions using 10 leapfrog steps per transition would take 49.56 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004784 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.84 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004823 seconds 
1000 transitions using 10 leapfrog steps per transition would take 48.23 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Best ELBO after 4 attempts: -17511.9643
 loglik = likelihood value from generated quantities-3.27041 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17509.77[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.009615 seconds 
1000 transitions using 10 leapfrog steps per transition would take 96.15 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008746 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.46 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008801 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.01 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008857 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.57 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Best ELBO after 4 attempts: -17182.2094
 loglik = likelihood value from generated quantities-3.203229 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17150.09[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013169 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.69 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013119 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.19 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.0 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013122 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.22 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013877 seconds 
1000 transitions using 10 leapfrog steps per transition would take 138.77 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Best ELBO after 4 attempts: -17219.1696
 loglik = likelihood value from generated quantities-3.203748 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17152.87[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016598 seconds 
1000 transitions using 10 leapfrog steps per transition would take 165.98 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.9 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016644 seconds 
1000 transitions using 10 leapfrog steps per transition would take 166.44 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.5 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016581 seconds 
1000 transitions using 10 leapfrog steps per transition would take 165.81 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.6 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.016702 seconds 
1000 transitions using 10 leapfrog steps per transition would take 167.02 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17193.839             1.000            1.000 
   200       -17193.063             0.500            1.000 
   300       -17190.912             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  47.7 seconds.
Saving 7 x 7 in image
ELBO for this run: -17251.0352
Best ELBO after 4 attempts: -17251.0352
 loglik = likelihood value from generated quantities-3.203165 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17149.74[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008779 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.79 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008787 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.87 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008916 seconds 
1000 transitions using 10 leapfrog steps per transition would take 89.16 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008806 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.06 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Best ELBO after 4 attempts: -17182.2094
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004849 seconds 
1000 transitions using 10 leapfrog steps per transition would take 48.49 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004842 seconds 
1000 transitions using 10 leapfrog steps per transition would take 48.42 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004781 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.81 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004792 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.92 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17512.735             1.000            1.000 
   200       -17512.972             0.500            1.000 
   300       -17512.711             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17511.9643
Best ELBO after 4 attempts: -17511.9643
 loglik = likelihood value from generated quantities-3.27041 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17509.77[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008732 seconds 
1000 transitions using 10 leapfrog steps per transition would take 87.32 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.6 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008836 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.36 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.1 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008678 seconds 
1000 transitions using 10 leapfrog steps per transition would take 86.78 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008817 seconds 
1000 transitions using 10 leapfrog steps per transition would take 88.17 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17188.639             1.000            1.000 
   200       -17181.014             0.500            1.000 
   300       -17181.361             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.3 seconds.
Saving 7 x 7 in image
ELBO for this run: -17182.2094
Best ELBO after 4 attempts: -17182.2094
 loglik = likelihood value from generated quantities-3.203229 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17150.09[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=635    segment 2=242    segment 3=621    segment 4=413    segment 5=498    segment 6=495    segment 7=539    segment 8=630    segment 9=540    segment 10=741 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=653    2=247    3=643    4=432    5=518    6=516    7=565    8=660    9=568    10=762 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.2487437 0.4974874
 [2,] 0.4950000 0.9900000
 [3,] 0.2487437 0.4974874
 [4,] 0.3311037 0.6622074
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.3311037 0.6622074
 [8,] 0.2487437 0.4974874
 [9,] 0.3311037 0.6622074
[10,] 0.2487437 0.4974874
 [1] "2:2" "2:0" "2:2" "2:1" "2:1" "2:1" "2:1" "2:2" "2:1" "2:2"
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013224 seconds 
1000 transitions using 10 leapfrog steps per transition would take 132.24 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013153 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.53 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.2 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013141 seconds 
1000 transitions using 10 leapfrog steps per transition would take 131.41 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.013368 seconds 
1000 transitions using 10 leapfrog steps per transition would take 133.68 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -17185.821             1.000            1.000 
   200       -17186.752             0.500            1.000 
   300       -17185.284             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  38.4 seconds.
Saving 7 x 7 in image
ELBO for this run: -17219.1696
Best ELBO after 4 attempts: -17219.1696
 loglik = likelihood value from generated quantities-3.203748 1000 5354log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-17152.87[1] "dim of log_lik_matrix5354" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
