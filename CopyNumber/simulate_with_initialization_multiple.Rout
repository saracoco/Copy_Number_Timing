
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(patchwork)
> library(loo)
This is loo version 2.8.0
- Online documentation and vignettes at mc-stan.org/loo
- As of v2.0.0 loo defaults to 1 core but we recommend using as many as possible. Use the 'cores' argument or set options(mc.cores = NUM_CORES) for an entire session. 
> library(bayesplot)
This is bayesplot version 1.11.1
- Online documentation and vignettes at mc-stan.org/bayesplot
- bayesplot theme set to bayesplot::theme_default()
   * Does _not_ affect other ggplot2 plots
   * See ?bayesplot_theme_set for details on theme setting
> library(cmdstanr)
This is cmdstanr version 0.8.1
- CmdStanR documentation and vignettes: mc-stan.org/cmdstanr
- CmdStan path: /u/cdslab/scocomello/.cmdstan/cmdstan-2.34.1
- CmdStan version: 2.34.1

A newer version of CmdStan is available. See ?install_cmdstan() to install it.
To disable this check set option or environment variable cmdstanr_no_ver_check=TRUE.
> library(factoextra)
Loading required package: ggplot2
Welcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(stringr) #for plotting add in the right script
> library(fossil) #RI and ARI computation
Loading required package: sp
Loading required package: maps
Loading required package: shapefiles
Loading required package: foreign

Attaching package: ‘shapefiles’

The following objects are masked from ‘package:foreign’:

    read.dbf, write.dbf

> library(gridExtra)

Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> library(ppclust)
> 
> 
> 
> #setwd("C:/Users/sarac/CDS_git/Copy-Number-Timing/CopyNumber/")
> #orfeo
> 
> sim_list = c(1,6,7,8,9,10,11,12,13,14,15)
> #1,
> number_clocks_list = c(3,2,2,2,3,3,3,3,4,4,4)
> # 1,
> number_events_list = c(10,10,20,30,6,10,20,30,10,20,30)
> # 4,
> epsilon_list = c(0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.20,0.15,0.15,0.15)
> # 0.20,
> for (i in (1:length(sim_list))) {
+ 
+ 
+ 
+ 
+     # setwd("D:/scratch/Copy_Number_Timing/CopyNumber")
+     setwd("/orfeo/cephfs/scratch/cdslab/scocomello/Copy_Number_Timing/CopyNumber")
+ 
+     original_dir <- getwd()
+ 
+     source("./CNTiming/R/simulate_functions.R")
+     source("./CNTiming/R/fitting_functions.R")
+     source("./CNTiming/R/plotting_functions.R")
+ 
+ 
+     self_name = as.character(sim_list[i])
+     new_dir = paste0("../",self_name) #relative path of the new created directory where to save the simulation results
+     dir.create(new_dir)
+ 
+     number_events = number_events_list[i]
+     number_clocks = number_clocks_list[i]
+ 
+     INIT = TRUE
+     epsilon = epsilon_list[i]
+     n_simulations = 5
+     purity = 0.99
+ 
+     vector_karyo <- c("2:0", "2:1", "2:2")
+     weights_karyo <- c(0.33, 0.33, 0.33)
+ 
+ 
+     # get simulation parametes
+     coverage = 100 # average number of reads that align to a reference base
+     mu = 1e-4 # mutation rate
+     w = 1e-2 # cell division rate
+     l = 1e7 # length of the segment
+     time_interval = 20
+ 
+ 
+     options(bitmapType='cairo')
+ 
+ 
+ 
+ 
+     for(i in 1:n_simulations){
+       # Create a unique directory for each iteration
+       iter_dir <- paste0("/simulation_iteration_", i)
+       iter_dir <- paste0(new_dir,iter_dir)
+       dir.create(iter_dir)
+       setwd(iter_dir)
+       dir.create(paste0("./plots"), showWarnings = TRUE)
+       dir.create(paste0("./results"), showWarnings = FALSE)
+       
+       
+ 
+       vector_tau = rep(0, number_clocks)
+       
+       for (j in 1:number_clocks){
+         vector_tau[j] = runif(1, 0)
+         if (j != 1){
+           while (!all ( abs(vector_tau[1:j-1] - vector_tau[j]) > epsilon  )   ){
+             vector_tau[j] = runif(1, 0)
+           }
+         }
+       }
+       weights_tau <- rep(1/number_clocks, number_clocks)
+       
+       data <- get_taus_karyo(number_events, vector_tau, vector_karyo, weights_tau, weights_karyo)
+       simulation_data_all_segments = get_simulation(data$taus, data$karyo, purity, coverage = 100) # the other parameters have default value assigned if none is specified
+       simulation_data_all_segments <- simulation_data_all_segments[order(simulation_data_all_segments$segment_id), ]
+ 
+ 
+       saveRDS(simulation_data_all_segments, "./results/all_sim_input_prepare_input_data.rds")
+ 
+ 
+ 
+       
+       Subtitle <- vector("list", (length(unique(simulation_data_all_segments$segment_id))+1))
+       Subtitle[[1]]  <- paste0("Number of mutations per segment: ")
+       num_mutations_all_segments <- c()
+ 
+         for (i in seq_along(unique(simulation_data_all_segments$segment_id))) {
+         segment <- unique(simulation_data_all_segments$segment_id)[i]
+         num_mutations <- nrow(simulation_data_all_segments %>% filter(segment_id == segment))
+         num_mutations_all_segments <- c(num_mutations_all_segments, num_mutations)
+         Subtitle[[i+1]] <- paste0(segment, "=", num_mutations," ")
+       }
+       
+       Subtitle <- paste(Subtitle, collapse = "   ")
+       cat(Subtitle)
+ 
+       mean_mut <- mean(num_mutations_all_segments)
+       max_mut <- max(num_mutations_all_segments)
+       min_mut <- min(num_mutations_all_segments)
+ 
+       Subtitle_short <- paste0("Mutations per segment: average =", mean_mut, ",  min = ", min_mut, ", max = ", max_mut )
+ 
+ 
+       #add statistics on number of mutations from the simulation
+       
+       simulation_params <- list(
+         vector_tau = vector_tau,
+         vector_karyo = vector_karyo,
+         weights_tau = weights_tau,
+         weights_karyo = weights_karyo,
+         taus = data$taus,
+         karyo = data$karyo,
+         purity = purity,
+         number_events = number_events, # = nrow(vector-tau) / nrow(vector_karyo)
+         number_clocks = number_clocks, # = unique(vector_tau)
+         epsilon = epsilon
+       )
+ 
+ 
+ 
+       simulation_data_plot = simulation_data_all_segments %>% mutate (tau = round(tau, 2))
+       plot_data <- simulation_data_plot %>% 
+         ggplot(mapping = aes(x = NV / DP, fill = segment_name)) +
+         geom_histogram(alpha = .5, position = "identity") +
+         labs(
+           title = "Distribution on the VAF for each segment in the simulated data",
+           subtitle = paste0(Subtitle_short)
+         )+
+         facet_wrap(vars(karyotype, tau, segment_name), scales = "free_x", strip.position = "bottom") +
+         theme_minimal() +
+         theme(
+         panel.background = element_rect(fill = "white", color = NA),  # White panel background
+         plot.background = element_rect(fill = "white", color = NA),   # White plot background
+         strip.background = element_rect(fill = "white", color = NA),  # White strip background
+         strip.placement = "outside",   # Place facet labels outside
+         axis.text.x = element_text(angle = 360, hjust = 1, color = "black", size = 8),  # Rotate and adjust x-axis text
+         axis.ticks.x = element_line(color = "black"),  # Black x-axis ticks
+         panel.spacing = unit(1, "lines"),  # Adjust space between facets
+         strip.text.x = element_text(size = 10, color = "black"),  # Adjust and color strip text
+         axis.line = element_line(color = "black"),  # Black axis lines
+         axis.title.x = element_text(color = "black"),  # Black x-axis title
+         axis.title.y = element_text(color = "black")   # Black y-axis title
+       )+
+        xlim(0, 1)
+ 
+ 
+       #save plot of the simulated data in which we can see each single segment VAF distribution
+       ggsave("./plots/simulation_data.png", plot = plot_data, width = 12 + simulation_params$number_events, height = 10 + simulation_params$number_events + (simulation_params$number_events/1.3), limitsize = FALSE,   device = png) 
+       #simulation_params can be substituted in relation with simulation_data variables
+       
+       
+       #in fit model selection best K the plots for each K inference is directly saved 
+       results <- fit_model_selection_best_K(simulation_data_all_segments, data$karyo, purity, INIT = INIT, simulation_params = simulation_params)
+       saveRDS(results, paste0("./results/results_simulation",i,".rds"))
+       
+ 
+       
+       
+       
+       model_selection_plot = plotting_model_selection(results)
+       model_selection_plot
+       ggsave("./plots/model_selection_plot.png", plot = model_selection_plot, width = 12, height = 10,  device = png)
+       
+       model_selection <- results$model_selection_tibble
+       saveRDS(model_selection, "./results/model_selection.rds")
+       
+ 
+       
+       setwd(original_dir)
+       
+     }
+ 
+ }
Loading required package: StanHeaders

rstan version 2.32.6 (Stan version 2.32.2)

For execution on a local, multicore CPU with excess RAM we recommend calling
options(mc.cores = parallel::detectCores()).
To avoid recompilation of unchanged Stan programs, we recommend calling
rstan_options(auto_write = TRUE)
For within-chain threading using `reduce_sum()` or `map_rect()` Stan functions,
change `threads_per_chain` option:
rstan_options(threads_per_chain = 1)


Attaching package: ‘tidyr’

The following object is masked from ‘package:rstan’:

    extract


Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count

Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
 tau = 0.476285392965596
 phi = 1
 kappa = 5[1] "These are the values used for initializing the model c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)"
[2] "These are the values used for initializing the model 0.476285392965596"              
[3] "These are the values used for initializing the model 1"                              
[4] "These are the values used for initializing the model 5"                              
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002406 seconds 
1000 transitions using 10 leapfrog steps per transition would take 24.06 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13422.426             1.000            1.000 
   200       -13422.567             0.500            1.000 
   300       -13420.735             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.5 seconds.
ELBO for this run: -13419.6983
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002372 seconds 
1000 transitions using 10 leapfrog steps per transition would take 23.72 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13421.139             1.000            1.000 
   200       -13420.748             0.500            1.000 
   300       -13421.026             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.6 seconds.
ELBO for this run: -13420.1466
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002351 seconds 
1000 transitions using 10 leapfrog steps per transition would take 23.51 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13420.627             1.000            1.000 
   200       -13422.674             0.500            1.000 
   300       -13421.387             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  13.5 seconds.
ELBO for this run: -13420.454
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002342 seconds 
1000 transitions using 10 leapfrog steps per transition would take 23.42 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13420.913             1.000            1.000 
   200       -13420.582             0.500            1.000 
   300       -13422.909             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  13.3 seconds.
ELBO for this run: -13422.2749
Best ELBO after 4 attempts: -13419.6983
 loglik = likelihood value from generated quantities-3.226947 1000 4158log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13417.65[1] "dim of log_lik_matrix4158" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=268    segment 3=201    segment 4=731    segment 5=405    segment 6=475    segment 7=570    segment 8=275    segment 9=293    segment 10=386 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
w = 0.000757496076807713
  w = 0.996611594740443
  w = 0.939459093214567
  w = 0.000581882812354633
  w = 0.953255718323256
  w = 0.986471168190916
  w = 0.983323899766959
  w = 0.955387401176746
  w = 0.975825289876124
  w = 0.000259385534661316
  w = 0.999242503923192
  w = 0.00338840525955682
  w = 0.0605409067854333
  w = 0.999418117187645
  w = 0.0467442816767438
  w = 0.0135288318090846
  w = 0.0166761002330408
  w = 0.0446125988232544
  w = 0.0241747101238754
  w = 0.999740614465339
 tau = 0.637190426208269
  tau = 0.0960300072594869
 phi = 0.5
  phi = 0.5
 kappa = 5[1] "These are the values used for initializing the model c(0.000757496076807713, 0.996611594740443, 0.939459093214567, 0.000581882812354633, 0.953255718323256, 0.986471168190916, 0.983323899766959, 0.955387401176746, 0.975825289876124, 0.000259385534661316, 0.999242503923192, 0.00338840525955682, 0.0605409067854333, 0.999418117187645, 0.0467442816767438, 0.0135288318090846, 0.0166761002330408, 0.0446125988232544, 0.0241747101238754, 0.999740614465339)"
[2] "These are the values used for initializing the model c(0.637190426208269, 0.0960300072594869)"                                                                                                                                                                                                                                                                                                                                                                      
[3] "These are the values used for initializing the model c(0.5, 0.5)"                                                                                                                                                                                                                                                                                                                                                                                                   
[4] "These are the values used for initializing the model 5"                                                                                                                                                                                                                                                                                                                                                                                                             
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00442 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.2 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13033.918             1.000            1.000 
   200       -13023.986             0.500            1.000 
   300       -13025.356             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.4 seconds.
ELBO for this run: -13034.4262
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004412 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.12 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13050.296             1.000            1.000 
   200       -13037.582             0.500            1.000 
   300       -13025.902             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.8 seconds.
ELBO for this run: -13034.5221
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004348 seconds 
1000 transitions using 10 leapfrog steps per transition would take 43.48 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13035.848             1.000            1.000 
   200       -13027.109             0.500            1.000 
   300       -13023.974             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.0 seconds.
ELBO for this run: -13032.6018
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004455 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.55 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13041.400             1.000            1.000 
   200       -13040.221             0.500            1.000 
   300       -13025.737             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.4 seconds.
ELBO for this run: -13035.0573
Best ELBO after 4 attempts: -13032.6018
 loglik = likelihood value from generated quantities-3.125147 1000 4158log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-12994.36[1] "dim of log_lik_matrix4158" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=268    segment 3=201    segment 4=731    segment 5=405    segment 6=475    segment 7=570    segment 8=275    segment 9=293    segment 10=386 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
w = 0.998215087403596
  w = 0.00441681337940021
  w = 0.000535263596937446
  w = 0.999154432066359
  w = 0.000561212407157992
  w = 0.000317526367627223
  w = 0.000110166123038088
  w = 0.0052341543526277
  w = 0.000529158779038391
  w = 0.999640436502007
  w = 0.00119774333375515
  w = 0.96647153627484
  w = 0.00385052507797555
  w = 0.00054225061701001
  w = 0.0048353943162264
  w = 0.998567954120545
  w = 0.999745656019234
  w = 0.980039976893316
  w = 0.997757639563048
  w = 0.000209557093103044
  w = 0.000587169262648814
  w = 0.0291116503457596
  w = 0.995614211325087
  w = 0.000303317316631257
  w = 0.994603393276616
  w = 0.00111451951182828
  w = 0.000144177857728274
  w = 0.0147258687540565
  w = 0.00171320165791399
  w = 0.000150006404889416
 tau = 0.0941804960987281
  tau = 0.573464406221072
  tau = 0.805913714512403
 phi = 0.333333333333333
  phi = 0.333333333333333
  phi = 0.333333333333333
 kappa = 5[1] "These are the values used for initializing the model c(0.998215087403596, 0.00441681337940021, 0.000535263596937446, 0.999154432066359, 0.000561212407157992, 0.000317526367627223, 0.000110166123038088, 0.0052341543526277, 0.000529158779038391, 0.999640436502007, 0.00119774333375515, 0.96647153627484, 0.00385052507797555, 0.00054225061701001, 0.0048353943162264, 0.998567954120545, 0.999745656019234, 0.980039976893316, 0.997757639563048, 0.000209557093103044, 0.000587169262648814, 0.0291116503457596, 0.995614211325087, 0.000303317316631257, 0.994603393276616, \n0.00111451951182828, 0.000144177857728274, 0.0147258687540565, 0.00171320165791399, 0.000150006404889416)"
[2] "These are the values used for initializing the model c(0.0941804960987281, 0.573464406221072, 0.805913714512403)"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
[3] "These are the values used for initializing the model c
[4] "These are the values used for initializing the model
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00618 seconds 
1000 transitions using 10 leapfrog steps per transition would take 61.8 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13035.543             1.000            1.000 
   200       -13037.721             0.500            1.000 
   300       -13037.947             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  26.3 seconds.
ELBO for this run: -13085.2931
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006046 seconds 
1000 transitions using 10 leapfrog steps per transition would take 60.46 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13037.706             1.000            1.000 
   200       -13038.394             0.500            1.000 
   300       -13035.136             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.4 seconds.
ELBO for this run: -13084.9969
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006074 seconds 
1000 transitions using 10 leapfrog steps per transition would take 60.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13045.713             1.000            1.000 
   200       -13032.950             0.500            1.000 
   300       -13032.682             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  25.4 seconds.
ELBO for this run: -13079.4478
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006133 seconds 
1000 transitions using 10 leapfrog steps per transition would take 61.33 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13053.289             1.000            1.000 
   200       -13041.496             0.500            1.000 
   300       -13034.930             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  27.8 seconds.
ELBO for this run: -13081.8922
Best ELBO after 4 attempts: -13079.4478
 loglik = likelihood value from generated quantities-3.125932 1000 4158log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-12997.63[1] "dim of log_lik_matrix4158" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=268    segment 3=201    segment 4=731    segment 5=405    segment 6=475    segment 7=570    segment 8=275    segment 9=293    segment 10=386 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
w = 0.00112956774338009
  w = 0.885090472963325
  w = 0.00427538324072049
  w = 0.000514441433206742
  w = 0.0056416583976044
  w = 0.921714134894073
  w = 0.72499092556348
  w = 0.0544250126605817
  w = 0.166103156786903
  w = 0.000202319681898206
  w = 0.996978401905192
  w = 0.00131728212881347
  w = 0.000526597232683621
  w = 0.998602085754267
  w = 0.000566527405255823
  w = 0.000355311797730272
  w = 0.000692112165066964
  w = 0.000716872799529655
  w = 0.000571171986612356
  w = 0.999429072547825
  w = 0.000587327877296681
  w = 0.00827131286810437
  w = 0.991972282111612
  w = 0.000302536041102605
  w = 0.989705427303705
  w = 0.00128952752480607
  w = 0.00266479094018864
  w = 0.00185585002692107
  w = 0.0018694486653305
  w = 0.000149674235689201
  w = 0.00130470247413075
  w = 0.105320932039758
  w = 0.00322573741498376
  w = 0.000580936771423842
  w = 0.00408638689343486
  w = 0.0766410257833908
  w = 0.271652171331264
  w = 0.943002264512968
  w = 0.831456222561154
  w = 0.000218933534587239
 tau = 0.588742821274942
  tau = 0.0941655512456292
  tau = 0.806037703363768
  tau = 0.552546422351282
 phi = 0.25
  phi = 0.25
  phi = 0.25
  phi = 0.25
 kappa = 5[1] "These are the values used for initializing the model c(0.00112956774338009, 0.885090472963325, 0.00427538324072049, 0.000514441433206742, 0.0056416583976044, 0.921714134894073, 0.72499092556348, 0.0544250126605817, 0.166103156786903, 0.000202319681898206, 0.996978401905192, 0.00131728212881347, 0.000526597232683621, 0.998602085754267, 0.000566527405255823, 0.000355311797730272, 0.000692112165066964, 0.000716872799529655, 0.000571171986612356, 0.999429072547825, 0.000587327877296681, 0.00827131286810437, 0.991972282111612, 0.000302536041102605, 0.989705427303705, \n0.00128952752480607, 0.00266479094018864, 0.00185585002692107, 0.0018694486653305, 0.000149674235689201, 0.00130470247413075, 0.105320932039758, 0.00322573741498376, 0.000580936771423842, 0.00408638689343486, 0.0766410257833908, 0.271652171331264, 0.943002264512968, 0.831456222561154, 0.000218933534587239)"
[2] "These are the values used for initializing the model c(0.588742821274942, 0.0941655512456292, 0.806037703363768, 0.552546422351282)"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
[3] "These are the values used for initializing the model c
[4] "These are the values used for initializing the model
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008145 seconds 
1000 transitions using 10 leapfrog steps per transition would take 81.45 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13046.269             1.000            1.000 
   200       -13044.902             0.500            1.000 
   300       -13039.256             0.334            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  31.5 seconds.
ELBO for this run: -13116.746
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008071 seconds 
1000 transitions using 10 leapfrog steps per transition would take 80.71 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13044.159             1.000            1.000 
   200       -13046.158             0.500            1.000 
   300       -13050.627             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.3 seconds.
ELBO for this run: -13121.747
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008112 seconds 
1000 transitions using 10 leapfrog steps per transition would take 81.12 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13055.009             1.000            1.000 
   200       -13050.702             0.500            1.000 
   300       -13056.094             0.334            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  31.5 seconds.
ELBO for this run: -13126.7252
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008009 seconds 
1000 transitions using 10 leapfrog steps per transition would take 80.09 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13049.922             1.000            1.000 
   200       -13044.461             0.500            1.000 
   300       -13044.093             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  31.5 seconds.
ELBO for this run: -13119.8088
Best ELBO after 4 attempts: -13116.746
 loglik = likelihood value from generated quantities-3.12618 1000 4158log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-12998.66[1] "dim of log_lik_matrix4158" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=268    segment 3=201    segment 4=731    segment 5=405    segment 6=475    segment 7=570    segment 8=275    segment 9=293    segment 10=386 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.3311037 0.6622074
 [2,] 0.4950000 0.9900000
 [3,] 0.4950000 0.9900000
 [4,] 0.2487437 0.4974874
 [5,] 0.3311037 0.6622074
 [6,] 0.3311037 0.6622074
 [7,] 0.2487437 0.4974874
 [8,] 0.4950000 0.9900000
 [9,] 0.4950000 0.9900000
[10,] 0.4950000 0.9900000
 [1] "2:1" "2:0" "2:0" "2:2" "2:1" "2:1" "2:2" "2:0" "2:0" "2:0"
w = 0.000757496076789738
  w = 0.996611594741119
  w = 0.939459093212645
  w = 0.000581882812380806
  w = 0.95325571832146
  w = 0.986471168192328
  w = 0.983323899768538
  w = 0.955387401179392
  w = 0.975825289878046
  w = 0.000259385534675212
  w = 0.99924250392321
  w = 0.00338840525888112
  w = 0.0605409067873552
  w = 0.999418117187619
  w = 0.0467442816785395
  w = 0.0135288318076719
  w = 0.0166761002314622
  w = 0.0446125988206084
  w = 0.0241747101219539
  w = 0.999740614465325
 tau = 0.637190426207914
  tau = 0.0960300072595176
 phi = 0.5
  phi = 0.5
 kappa = 5[1] "These are the values used for initializing the model c(0.000757496076789738, 0.996611594741119, 0.939459093212645, 0.000581882812380806, 0.95325571832146, 0.986471168192328, 0.983323899768538, 0.955387401179392, 0.975825289878046, 0.000259385534675212, 0.99924250392321, 0.00338840525888112, 0.0605409067873552, 0.999418117187619, 0.0467442816785395, 0.0135288318076719, 0.0166761002314622, 0.0446125988206084, 0.0241747101219539, 0.999740614465325)"
[2] "These are the values used for initializing the model c(0.637190426207914, 0.0960300072595176)"                                                                                                                                                                                                                                                                                                                                                                    
[3] "These are the values used for initializing the model c(0.5, 0.5)"                                                                                                                                                                                                                                                                                                                                                                                                 
[4] "These are the values used for initializing the model 5"                                                                                                                                                                                                                                                                                                                                                                                                           
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004455 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.55 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13042.699             1.000            1.000 
   200       -13028.717             0.501            1.000 
   300       -13026.250             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.5 seconds.
ELBO for this run: -13033.8307
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00445 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.5 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13037.628             1.000            1.000 
   200       -13027.676             0.500            1.000 
   300       -13029.909             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  19.6 seconds.
ELBO for this run: -13037.0156
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004441 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.41 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13028.751             1.000            1.000 
   200       -13025.878             0.500            1.000 
   300       -13024.651             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.2 seconds.
ELBO for this run: -13032.1843
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00444 seconds 
1000 transitions using 10 leapfrog steps per transition would take 44.4 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13042.595             1.000            1.000 
   200       -13033.804             0.500            1.000 
   300       -13025.954             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.0 seconds.
ELBO for this run: -13033.0975
Best ELBO after 4 attempts: -13032.1843
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=554    segment 2=268    segment 3=201    segment 4=731    segment 5=405    segment 6=475    segment 7=570    segment 8=275    segment 9=293    segment 10=386 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=572    2=280    3=207    4=764    5=422    6=494    7=586    8=279    9=301    10=400 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=331    2=479    3=547    4=576    5=407    6=568    7=298    8=210    9=766    10=395 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
  w = 1
 tau = 0.275039911342515
 phi = 1
 kappa = 5[1] "These are the values used for initializing the model c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1)"
[2] "These are the values used for initializing the model 0.275039911342515"              
[3] "These are the values used for initializing the model 1"                              
[4] "These are the values used for initializing the model 5"                              
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002554 seconds 
1000 transitions using 10 leapfrog steps per transition would take 25.54 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13645.105             1.000            1.000 
   200       -13644.832             0.500            1.000 
   300       -13645.090             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.5 seconds.
ELBO for this run: -13644.6553
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002516 seconds 
1000 transitions using 10 leapfrog steps per transition would take 25.16 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13645.313             1.000            1.000 
   200       -13645.082             0.500            1.000 
   300       -13645.127             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.6 seconds.
ELBO for this run: -13644.7896
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002512 seconds 
1000 transitions using 10 leapfrog steps per transition would take 25.12 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13645.091             1.000            1.000 
   200       -13645.593             0.500            1.000 
   300       -13644.915             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.2 seconds.
ELBO for this run: -13644.4167
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.002524 seconds 
1000 transitions using 10 leapfrog steps per transition would take 25.24 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13645.059             1.000            1.000 
   200       -13644.816             0.500            1.000 
   300       -13644.891             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  14.7 seconds.
ELBO for this run: -13644.4514
Best ELBO after 4 attempts: -13644.4167
 loglik = likelihood value from generated quantities-3.10321 1000 4396log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13641.71[1] "dim of log_lik_matrix4396" "dim of log_lik_matrix2"   
[1] "dim of w_ICL10" "dim of w_ICL1" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL2" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=316    segment 2=465    segment 3=517    segment 4=550    segment 5=395    segment 6=543    segment 7=287    segment 8=208    segment 9=738    segment 10=377 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=331    2=479    3=547    4=576    5=407    6=568    7=298    8=210    9=766    10=395 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
w = 0.954331251696846
  w = 0.966614841408662
  w = 0.967800975987212
  w = 0.00108523845458081
  w = 0.000154154903638311
  w = 0.000511795970707982
  w = 0.967376565127659
  w = 0.817254528047321
  w = 0.000541049384322128
  w = 0.000100235558367533
  w = 0.0456687483031543
  w = 0.0333851585913384
  w = 0.0321990240127879
  w = 0.998914761545419
  w = 0.999845845096362
  w = 0.999488204029292
  w = 0.0326234348723405
  w = 0.182745471952679
  w = 0.999458950615678
  w = 0.999899764441632
 tau = 0.506008066397059
  tau = 0.0264206002340579
 phi = 0.5
  phi = 0.5
 kappa = 5[1] "These are the values used for initializing the model c(0.954331251696846, 0.966614841408662, 0.967800975987212, 0.00108523845458081, 0.000154154903638311, 0.000511795970707982, 0.967376565127659, 0.817254528047321, 0.000541049384322128, 0.000100235558367533, 0.0456687483031543, 0.0333851585913384, 0.0321990240127879, 0.998914761545419, 0.999845845096362, 0.999488204029292, 0.0326234348723405, 0.182745471952679, 0.999458950615678, 0.999899764441632)"
[2] "These are the values used for initializing the model c(0.506008066397059, 0.0264206002340579)"                                                                                                                                                                                                                                                                                                                                                                       
[3] "These are the values used for initializing the model c(0.5, 0.5)"                                                                                                                                                                                                                                                                                                                                                                                                    
[4] "These are the values used for initializing the model 5"                                                                                                                                                                                                                                                                                                                                                                                                              
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004744 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.44 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13085.338             1.000            1.000 
   200       -13083.728             0.500            1.000 
   300       -13084.475             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  20.7 seconds.
ELBO for this run: -13098.2875
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004697 seconds 
1000 transitions using 10 leapfrog steps per transition would take 46.97 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13087.956             1.000            1.000 
   200       -13084.608             0.500            1.000 
   300       -13084.072             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.9 seconds.
ELBO for this run: -13094.351
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004722 seconds 
1000 transitions using 10 leapfrog steps per transition would take 47.22 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13090.300             1.000            1.000 
   200       -13082.210             0.500            1.000 
   300       -13084.056             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.0 seconds.
ELBO for this run: -13094.011
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.004641 seconds 
1000 transitions using 10 leapfrog steps per transition would take 46.41 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13085.630             1.000            1.000 
   200       -13086.837             0.500            1.000 
   300       -13086.597             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  21.1 seconds.
ELBO for this run: -13094.7721
Best ELBO after 4 attempts: -13094.011
 loglik = likelihood value from generated quantities-2.96836 1000 4396log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13048.91[1] "dim of log_lik_matrix4396" "dim of log_lik_matrix4"   
[1] "dim of w_ICL10" "dim of w_ICL2" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL3" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=316    segment 2=465    segment 3=517    segment 4=550    segment 5=395    segment 6=543    segment 7=287    segment 8=208    segment 9=738    segment 10=377 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=331    2=479    3=547    4=576    5=407    6=568    7=298    8=210    9=766    10=395 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
w = 0.00038328623967114
  w = 0.000119774483816609
  w = 0.00014623049174225
  w = 0.000195487542629303
  w = 0.000221864416949467
  w = 0.000113894730492063
  w = 0.000135407719413236
  w = 0.999800059981982
  w = 0.000116906303824898
  w = 0.000147312154918161
  w = 0.000571349787467154
  w = 0.000129880434593718
  w = 0.000169112974686686
  w = 0.999236198062686
  w = 0.999048753610855
  w = 0.999716835476887
  w = 0.000153135834104642
  w = 9.99700090027696e-05
  w = 0.999698915969869
  w = 0.999510804569656
  w = 0.999045363972862
  w = 0.99975034508159
  w = 0.999684656533571
  w = 0.000568314394684815
  w = 0.000729381972195927
  w = 0.000169269792620776
  w = 0.999711456446482
  w = 9.99700090151316e-05
  w = 0.000184177726306537
  w = 0.000341883275425563
 tau = 0.936061313314156
  tau = 0.019915656097451
  tau = 0.428690928066792
 phi = 0.333333333333333
  phi = 0.333333333333333
  phi = 0.333333333333333
 kappa = 5[1] "These are the values used for initializing the model c(0.00038328623967114, 0.000119774483816609, 0.00014623049174225, 0.000195487542629303, 0.000221864416949467, 0.000113894730492063, 0.000135407719413236, 0.999800059981982, 0.000116906303824898, 0.000147312154918161, 0.000571349787467154, 0.000129880434593718, 0.000169112974686686, 0.999236198062686, 0.999048753610855, 0.999716835476887, 0.000153135834104642, 9.99700090027696e-05, 0.999698915969869, 0.999510804569656, 0.999045363972862, 0.99975034508159, 0.999684656533571, 0.000568314394684815, 0.000729381972195927, \n0.000169269792620776, 0.999711456446482, 9.99700090151316e-05, 0.000184177726306537, 0.000341883275425563)"
[2] "These are the values used for initializing the model c(0.936061313314156, 0.019915656097451, 0.428690928066792)"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
[3] "These are the values used for initializing the model c
[4] "These are the values used for initializing the model
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006493 seconds 
1000 transitions using 10 leapfrog steps per transition would take 64.93 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13098.488             1.000            1.000 
   200       -13096.633             0.500            1.000 
   300       -13119.775             0.334            0.002   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  27.6 seconds.
ELBO for this run: -13155.3845
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006528 seconds 
1000 transitions using 10 leapfrog steps per transition would take 65.28 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13123.137             1.000            1.000 
   200       -13099.291             0.501            1.000 
   300       -13102.090             0.334            0.002   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  27.0 seconds.
ELBO for this run: -13145.4767
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.006491 seconds 
1000 transitions using 10 leapfrog steps per transition would take 64.91 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13110.676             1.000            1.000 
   200       -13096.456             0.501            1.000 
   300       -13104.908             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  28.4 seconds.
ELBO for this run: -13154.0084
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00648 seconds 
1000 transitions using 10 leapfrog steps per transition would take 64.8 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13105.946             1.000            1.000 
   200       -13096.016             0.500            1.000 
   300       -13099.194             0.334            0.001   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  29.8 seconds.
ELBO for this run: -13149.5813
Best ELBO after 4 attempts: -13145.4767
 loglik = likelihood value from generated quantities-2.969537 1000 4396log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13054.09[1] "dim of log_lik_matrix4396" "dim of log_lik_matrix6"   
[1] "dim of w_ICL10" "dim of w_ICL3" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL4" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Number of mutations per segment:    segment 1=316    segment 2=465    segment 3=517    segment 4=550    segment 5=395    segment 6=543    segment 7=287    segment 8=208    segment 9=738    segment 10=377 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
Number of mutations per segment:    1=331    2=479    3=547    4=576    5=407    6=568    7=298    8=210    9=766    10=395 `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
these are the peaks used to filter out mutations 
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
These are the Karyotypes extracted from the all_sim data, used in peaks
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
 [1]  1  2  3  4  5  6  7  8  9 10
These are the Karyotypes directly from the simulation, used for peaks in the model
  [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
These are the peaks which are passed in the inference task, more reliable let's say
           [,1]      [,2]
 [1,] 0.4950000 0.9900000
 [2,] 0.3311037 0.6622074
 [3,] 0.3311037 0.6622074
 [4,] 0.3311037 0.6622074
 [5,] 0.4950000 0.9900000
 [6,] 0.3311037 0.6622074
 [7,] 0.4950000 0.9900000
 [8,] 0.4950000 0.9900000
 [9,] 0.2487437 0.4974874
[10,] 0.4950000 0.9900000
 [1] "2:0" "2:1" "2:1" "2:1" "2:0" "2:1" "2:0" "2:0" "2:2" "2:0"
w = 0.998466843408703
  w = 0.999620187446755
  w = 0.999514766335143
  w = 0.000174134483016018
  w = 0.000121779359063316
  w = 0.000121340750679648
  w = 0.999557749040109
  w = 9.99600160009907e-05
  w = 0.000114338623841945
  w = 0.000120995903932522
  w = 0.000558883782523002
  w = 0.000129051237356871
  w = 0.000167250999467351
  w = 0.955731589112655
  w = 0.0147782964638971
  w = 0.97251094688201
  w = 0.000151693082382082
  w = 9.99600159958422e-05
  w = 0.982456140891817
  w = 0.0253093056603455
  w = 0.000383236903169694
  w = 0.000119728202521754
  w = 0.000146160990174567
  w = 0.000115087829885194
  w = 0.000104185676540914
  w = 0.000104256184178649
  w = 0.00013534711345487
  w = 0.999700119952007
  w = 0.000102851943203479
  w = 0.000104076753828613
  w = 0.000591035905604421
  w = 0.000131033113366183
  w = 0.000171821675214933
  w = 0.0439791885744439
  w = 0.984995738500499
  w = 0.0272634561831315
  w = 0.00015521076405369
  w = 9.99600159959093e-05
  w = 0.0173266685411379
  w = 0.974465621681893
 tau = 0.428692842499832
  tau = 0.014550639030267
  tau = 0.93606133745488
  tau = 0.0280482679298096
 phi = 0.25
  phi = 0.25
  phi = 0.25
  phi = 0.25
 kappa = 5[1] "These are the values used for initializing the model c(0.998466843408703, 0.999620187446755, 0.999514766335143, 0.000174134483016018, 0.000121779359063316, 0.000121340750679648, 0.999557749040109, 9.99600160009907e-05, 0.000114338623841945, 0.000120995903932522, 0.000558883782523002, 0.000129051237356871, 0.000167250999467351, 0.955731589112655, 0.0147782964638971, 0.97251094688201, 0.000151693082382082, 9.99600159958422e-05, 0.982456140891817, 0.0253093056603455, 0.000383236903169694, 0.000119728202521754, 0.000146160990174567, 0.000115087829885194, \n0.000104185676540914, 0.000104256184178649, 0.00013534711345487, 0.999700119952007, 0.000102851943203479, 0.000104076753828613, 0.000591035905604421, 0.000131033113366183, 0.000171821675214933, 0.0439791885744439, 0.984995738500499, 0.0272634561831315, 0.00015521076405369, 9.99600159959093e-05, 0.0173266685411379, 0.974465621681893)"
[2] "These are the values used for initializing the model c(0.428692842499832, 0.014550639030267, 0.93606133745488, 0.0280482679298096)"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
[3] "These are the values used for initializing the model c
[4] "These are the values used for initializing the model
Attempt 1 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.00861 seconds 
1000 transitions using 10 leapfrog steps per transition would take 86.1 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13104.173             1.000            1.000 
   200       -13106.900             0.500            1.000 
   300       -13104.798             0.333            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.6 seconds.
ELBO for this run: Inf
Attempt 2 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008574 seconds 
1000 transitions using 10 leapfrog steps per transition would take 85.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13109.326             1.000            1.000 
   200       -13105.419             0.500            1.000 
   300       -13102.125             0.334            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.7 seconds.
ELBO for this run: Inf
Attempt 3 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008474 seconds 
1000 transitions using 10 leapfrog steps per transition would take 84.74 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13121.618             1.000            1.000 
   200       -13104.982             0.501            1.000 
   300       -13129.288             0.334            0.002   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  36.9 seconds.
ELBO for this run: Inf
Attempt 4 of 4
Running inference, retry 1
------------------------------------------------------------ 
EXPERIMENTAL ALGORITHM: 
  This procedure has not been thoroughly tested and may be unstable 
  or buggy. The interface is subject to change. 
------------------------------------------------------------ 
Gradient evaluation took 0.008603 seconds 
1000 transitions using 10 leapfrog steps per transition would take 86.03 seconds. 
Adjust your expectations accordingly! 
Begin eta adaptation. 
Iteration:   1 / 250 [  0%]  (Adaptation) 
Iteration:  50 / 250 [ 20%]  (Adaptation) 
Iteration: 100 / 250 [ 40%]  (Adaptation) 
Iteration: 150 / 250 [ 60%]  (Adaptation) 
Iteration: 200 / 250 [ 80%]  (Adaptation) 
Success! Found best value [eta = 1] earlier than expected. 
Begin stochastic gradient ascent. 
  iter             ELBO   delta_ELBO_mean   delta_ELBO_med   notes  
   100       -13116.855             1.000            1.000 
   200       -13110.326             0.500            1.000 
   300       -13109.790             0.334            0.000   MEDIAN ELBO CONVERGED 
Drawing a sample of size 1000 from the approximate posterior...  
COMPLETED. 
Finished in  33.8 seconds.
ELBO for this run: Inf
Best ELBO after 4 attempts: Inf
 loglik = likelihood value from generated quantities-2.969427 1000 4396log_lik_total_per_sample = mean of likelihood value from generated quantities1000L = mean of likelihood value from generated quantities-13053.6[1] "dim of log_lik_matrix4396" "dim of log_lik_matrix8"   
[1] "dim of w_ICL10" "dim of w_ICL4" 
[1] "dim of log_lik_matrix_ICL10" "dim of log_lik_matrix_ICL5" 
[1] 1
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
Scale for x is already present.
Adding another scale for x, which will replace the existing scale.
